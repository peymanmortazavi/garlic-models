* Explore making both Field and Model return a single ConstraintResult.
* Start polishing the test methods across the board so they actually return the errors.
* Make a parsing model and test against it before parsing.
* Move all parse methods from the constraints to the module header.
* Make a yaml parser that uses libyaml to create clove value and parse clove to yaml.
* Create an issue to explore using a different container other than vector to enable constexpr
  models.

  When making the Python module, take a look at this:
  https://github.com/python-rapidjson/python-rapidjson

  Update the libyaml module to allow using an existing initialized emitter.
